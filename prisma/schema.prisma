generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pet {
  id          String          @id @default(uuid())
  name        String          @db.VarChar(50)
  species     PetSpecies
  birth_date  DateTime        @db.Date
  description String?         @db.VarChar(300)
  status      PetStatus       @default(AVAILABLE)
  size        PetSize
  personality PetPersonality?
  adoptions Adoption[]
}

enum PetSpecies {
  DOG
  CAT
  RABBIT
  FISH
  BIRD
  TURTLE
  SNAKE
  OTHER
}

enum PetStatus {
  AVAILABLE
  ADOPTED
}

enum PetSize {
  SMALL
  MEDIUM
  LARGE
}

enum PetPersonality {
  CALM
  AGGRESSIVE
  PLAYFUL
  INDEPENDENT
  DEPENDENT
  LOYAL
  CURIOUS
  LOVING
}

model Adopter {
  id       String   @id @default(uuid())
  name     String   @db.VarChar(40)
  email    String   @unique
  password String
  phone    String   @db.VarChar(13)
  adress   Adress[]
  adoptions Adoption[]

  @@map("adopters")
}

model Adress {
  id           String   @id @default(uuid())
  street       String
  number       String
  neighborhood String
  city         String
  adopterId    String   @map("adopterId")
  adopter      Adopter? @relation(fields: [adopterId], references: [id])
}

model Adoption {
  id           String   @id @default(uuid())
  pet_id       String
  pet          Pet      @relation(fields: [pet_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pet")
  adopter_id   String
  adopter      Adopter  @relation(fields: [adopter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_adopter")
  adopter_date DateTime @db.Date
  
}