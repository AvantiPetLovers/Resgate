generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pet {
  id          String          @id @default(uuid())
  name        String          @db.VarChar(40)
  species     PetSpecies
  birth_date  DateTime        @db.Date
  description String?         @db.VarChar(300)
  status      PetStatus       @default(AVAILABLE)
  size        PetSize
  personality PetPersonality?
  adoptions   Adoption?
}

enum PetSpecies {
  DOG
  CAT
  RABBIT
  FISH
  BIRD
  TURTLE
  SNAKE
  OTHER
}

enum PetStatus {
  AVAILABLE
  ADOPTED
}

enum PetSize {
  SMALL
  MEDIUM
  LARGE
}

enum PetPersonality {
  CALM
  AGGRESSIVE
  PLAYFUL
  INDEPENDENT
  DEPENDENT
  LOYAL
  CURIOUS
  LOVING
}

model User {
  id        String      @id @default(uuid())
  name      String      @db.VarChar(40)
  email     String      @unique
  password  String
  phone     String?     @db.VarChar(14)
  access    AccessLevel @default(ADOPTER)
  adress    Adress?
  adoptions Adoption[]
}

enum AccessLevel {
  ADMIN
  ADOPTER
}

model Adress {
  user_id      String @unique
  user         User   @relation(fields: [user_id], references: [id], map: "fk_user", onDelete: Cascade, onUpdate: Cascade)
  street       String
  number       String
  neighborhood String
  city         String

  @@id(user_id) // Chave primária de endereço é a mesma de adotante
}

model Adoption {
  pet_id        String   @unique
  pet           Pet      @relation(fields: [pet_id], references: [id], map: "fk_pet", onDelete: Cascade, onUpdate: Cascade)
  user_id       String
  user          User     @relation(fields: [user_id], references: [id], map: "fk_user", onDelete: Cascade, onUpdate: Cascade)
  adoption_date DateTime @default(now())

  @@id(pet_id) // Chave primária de adoção é a mesma de pet
}
